<?php

namespace RfidBundle\Entity;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RfidLogRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Disables all matching.
     */
    public function disableMatching(RfidLog $rfidLog)
    {
        $queryBuilder = $this
            ->_em
            ->createQueryBuilder()
            ->update($this->_entityName, 'rl')
            ->set('rl.enabled', ':enabled')
            ->setParameter('enabled', false)
            ->where('rl.epc = :epc')
            ->andWhere('rl.enabled = true')
            ->setParameter('epc', $rfidLog->getEpc())
        ;
        return $queryBuilder->getQuery()->execute();
    }
    
    /**
     * Disables all matching.
     */
    public function keepLatest(RfidLog $rfidLog)
    {
        $queryBuilder = $this
            ->_em
            ->createQueryBuilder()
            ->update($this->_entityName, 'rl')
            ->set('rl.enabled', ':enabled')
            ->setParameter('enabled', false)
            ->where('rl.epc = :epc')
            ->andWhere('rl.enabled = true')
            ->andWhere('rl.timeStamp < :timeStamp')
            ->setParameter('epc', $rfidLog->getEpc())
            ->setParameter('timeStamp', $rfidLog->getTimeStamp())
        ;
        return $queryBuilder->getQuery()->execute();
    }
    
    /**
     * Disables all matching.
     */
    public function getOlderEnabledByEpc(RfidLog $rfidLog)
    {
        $queryBuilder = $this
            ->createQueryBuilder('rl')
            ->where('rl.epc = :epc')
            ->andWhere('rl.enabled = true')
            ->andWhere('rl.timeStamp <= :timeStamp')
            ->setParameter('epc', $rfidLog->getEpc())
            ->setParameter('timeStamp', $rfidLog->getTimeStamp())
        ;
        $olderEnabled = $queryBuilder->getQuery()->getOneOrNullResult();
        return $olderEnabled;
    }
    /**
     * Disables all matching.
     */
    public function getEnabledByEpc(RfidLog $rfidLog)
    {
        $queryBuilder = $this
            ->createQueryBuilder('rl')
            ->where('rl.epc = :epc')
            ->andWhere('rl.enabled = true')
            ->setParameter('epc', $rfidLog->getEpc())
        ;
        $enabled = $queryBuilder->getQuery()->getOneOrNullResult();
        return $enabled;
    }
}
