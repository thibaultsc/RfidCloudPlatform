<?php

namespace RfidBundle\Entity;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RfidLogRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * Retrive the older enabled log with the same EPC
     */
    public function getOlderEnabledByEpc(RfidLog $rfidLog)
    {
        $queryBuilder = $this
            ->createQueryBuilder('rl')
            ->where('rl.epc = :epc')
            ->andWhere('rl.enabled = true')
            ->andWhere('rl.timeStamp <= :timeStamp')
            ->setParameter('epc', $rfidLog->getEpc())
            ->setParameter('timeStamp', $rfidLog->getTimeStamp())
        ;
        $olderEnabled = $queryBuilder->getQuery()->getOneOrNullResult();
        return $olderEnabled;
    }
    /**
     * Retrive the enabled log with the same EPC
     */
    public function getEnabledByEpc(RfidLog $rfidLog)
    {
        $queryBuilder = $this
            ->createQueryBuilder('rl')
            ->where('rl.epc = :epc')
            ->andWhere('rl.enabled = true')
            ->setParameter('epc', $rfidLog->getEpc())
        ;
        $enabled = $queryBuilder->getQuery()->getOneOrNullResult();
        return $enabled;
    }
    
    /**
     * Create the enabled queryBuilder
     */
    public function rfidLogQueryBuilder()
    {
        $queryBuilder = $this
            ->createQueryBuilder('rl')
            ->select('count(rl) as stock')
            ->innerJoin('rl.product', 'p')
            ->addSelect('p.ean')
            ->where('rl.enabled = true')
            ->groupBy('p.ean')
        ;
        $enabled = $queryBuilder->getQuery()->getResult();
        return $enabled;
    }
    
    /**
     * Create the enabled queryBuilder
     */
    public function rfidLogQueryBuilder2()
    {
        return $queryBuilder = $this
            ->createQueryBuilder('rl')
            ->select('count(rl) as stock')
            ->leftJoin('rl.product', 'p')
            ->leftJoin('rl.store', 's')
            ->leftJoin('s.type', 'st')
            ->leftJoin('rl.zone', 'z')
            ->leftJoin('z.type', 'zt')
            ->addSelect('p.ean')
            ->andWhere('rl.enabled = true')
            ->addGroupBy('p.ean')
        ;
        
        
    }
    public function gRfidLogQueryBuilder()
    {
        return $queryBuilder = $this
            ->createQueryBuilder('rl')
            ->select('count(rl) as stock')
            ->leftJoin('rl.product', 'p')
            ->leftJoin('rl.store', 's')
            ->leftJoin('s.type', 'st')
            ->leftJoin('rl.zone', 'z')
            ->leftJoin('z.type', 'zt')
            ->andWhere('rl.enabled = true')
        ;
        
        
    }
    
}
